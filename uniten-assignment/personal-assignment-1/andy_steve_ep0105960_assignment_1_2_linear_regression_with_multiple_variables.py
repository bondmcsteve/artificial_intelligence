# -*- coding: utf-8 -*-
"""Andy Steve - EP0105960 - Assignment 1-2: Linear Regression with multiple variables

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LmXTY7c71hxJyJokoIumG1ogDP1xPMrJ

##Example code for Linear Regression with Multiple Variables
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression

"""Download the home prices data into the colab workspace."""

!wget https://raw.githubusercontent.com/mdzafri/uniten-ai/main/2022-1/homeprices.csv

"""Load the data into a pandas dataframe. View and then analyze the data. Look for trends."""

df = pd.read_csv("homeprices.csv")
df

"""NaN needs to be handled. Many methods can be used to assume the value, usually you need understanding of the data.

Here we use the median to get a number for "bedrooms".
"""

import math
median_bedrooms = math.floor(df.bedrooms.median())
median_bedrooms

"""Use `fillna` to replace any NaN occurance with the calculated median value."""

df.bedrooms = df.bedrooms.fillna(median_bedrooms)
df

"""Define the model to use Linear Regression. Then train/fit the model using the `fit` method. 

Note the syntax using double brackets `[['']]`
"""

model = LinearRegression()
model.fit(df[['area', 'bedrooms', 'age']], df.price)

"""View the model coefficients and intercept."""

print("Model slope:    ", model.coef_)
print("Model intercept:", model.intercept_)

"""Predict the price of a home with the following features:

1. 3000 sqft area, 3 bedrooms, 40 years old
2. 2500 sqft area, 4 bedrooms, 5 years old
"""

# pass a datafram to the predict function
# sample = pd.DataFrame({'area':[3000],
#                    'bedrooms':[3],
#                    'age':[40]})
# model.predict(sample[['area', 'bedrooms', 'age']])

# pass array values to the predict function
model.predict([[3000, 3, 40]])

"""##Assignment 1, Part 2
Estimate the salary of candidate employees based on their experience, test score and interview score:

1. Carol Danvers, 8 years, test: 7, interview: 9
2. Kamala Khan, 1 year, test: 6, interview: 9

Start by downloading the Salary data into the colab workspace.
"""

!wget https://raw.githubusercontent.com/mdzafri/uniten-ai/main/2022-1/hrSalary.csv

"""Initialising package libraries for Linear Regression and Data Analysis"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression

#just in the case if mathematical analysis is required 
import math

"""Now, we shall begin with loading the downloaded csv file onto the notebook using pandas"""

df = pd.read_csv("hrSalary.csv")
df

"""To resolve the gaps in the tabulation, we shall use median value to fill in the gaps. By applying math library, we shall have the snippet below"""

#for column titled 'experience', note that the median value might be in decimals so we shall attempt rounding off

median_exp = math.floor(df.experience.median())
print("Median value for column 'experience'         =", median_exp)

#similarly, for test scores and interview scores

median_test = math.floor(df.test_score.median())
print("Median value for column 'test_score'         =", median_test)

median_iv = math.floor(df.interview_score.median())
print("Median value for column 'interview_score'    =", median_iv)

"""By using fillna function to replace NaN occurances"""

df.experience = df.experience.fillna(median_exp)
df.test_score = df.test_score.fillna(median_test)
df.interview_score = df.interview_score.fillna(median_iv)

df

"""Now, using LinearRegression() function, we model the regression as following,"""

model = LinearRegression()
model.fit(df[['experience', 'test_score', 'interview_score']], df.salary)

"""Viewing model coefficients and intercept"""

print("Model coefficient    =", model.coef_)
print("Model intercept      =", model.intercept_)

"""Predicting salary for Carol Danvers and Kamala Khan respectively"""

#Salary prediction for Carol Danvers

salary_carol = model.predict([[8, 7, 9]])
print("The predicted salary for Carol Danvers   =", salary_carol)

#Salary prediction for Kamala Khan

salary_kamala = model.predict([[1, 6, 9]])
print("The predicted salary for Kamala Khan     =", salary_kamala)